Django Model --> DB의 테이블을 정의하고 데이터를 조작할 수 있는 기능들을 제공 (테이블 구조를 설계하는 청사진)

설계할 때는 models.py 의 Model 클래스를 사용

Model Field
- 데이터베이스 테이블의 열(column)을 나타내는 중요한 구성요소 *가로행(record)*
- 데이터의 유형과 제약 조건을 정의

Model Field 구성
1. Field types(필드 유형)
 - 데이터베이스에 저장될 "데이터의 종류"를 정의
2. Field option(필드 옵션)
 - 필드의 "동작"과 "제약조건"을 정의

주요 필드 유형

- 문자열 필드 : CharField, TextField
- 숫자 필드 : IntegerField, FloatField
- 날짜/시간 필드 : DateField, TimeField, DateTimeField
- 파일 관련 필드 : FileField, ImageField

***Migrations***
- model 클래스의 변경사항(필드 생성, 수정 삭제 등)을 DB에 최종 반영하는 방법

Migrations 과정
model class(설계도 초안) ----makemigrations---> migration파일 생성(최종 설계도) -----migrate----> db.sqlite3(DB)

명령어 
$ python manage.py makemigrations - model class를 기반으로 최종 설계도 (migration) 작성
$ python manage.py migrate - 최종 설계도를 DB에 전달하여 반영

Automatic admin interface
- django가 추가 설치 및 설정 없이 자동으로 제공해주는 관리자 인터페이스

admin 계정 생성 명령어
$ python manage.py createsuperuser
- email은 선택사항



